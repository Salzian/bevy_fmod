name: Rust CI Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install platform dependencies
        uses: ./.github/actions/install-platform-dependencies
        with:
          os: ${{ matrix.os }}

      - uses: actions/checkout@v3

      - name: Setup cache
        uses: ./.github/actions/setup-cache-action

      - name: Compile project
        run: cargo build

      - name: Upload build artifacts
        # Only used by the lint job right now, which only runs on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.os }}
          path: target/

  # This job is currently disabled because it requires the FMOD libraries to be present.
  # We will revisit this once we actually have any tests.
  #test:

  #  needs: build

  #  strategy:
  #    fail-fast: true
  #    matrix:
  #      os: [ windows-latest, macos-latest, ubuntu-latest ]

  #  runs-on: ${{ matrix.os }}

  #  steps:
  #    - uses: actions/checkout@v3

  #    - name: Setup cache
  #      uses: ./.github/actions/setup-cache-action

  #    - if: matrix.os == 'ubuntu-latest'
  #      name: (Ubuntu) Install platform dependencies
  #      run: sudo apt install -y libasound2-dev libudev-dev

  #    - name: Execute tests
  #      run: cargo test

  lint:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Install platform dependencies
        uses: ./.github/actions/install-platform-dependencies
        with:
          os: ${{ matrix.os }}

      - uses: actions/checkout@v3

      - name: Setup cache
        uses: ./.github/actions/setup-cache-action

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-ubuntu-latest
          path: target/

      - name: Lint with clippy
        run: cargo clippy -- -D warnings
